require "nvchad.options"

-- add yours here!

-- local o = vim.o
-- o.cursorlineopt ='both' -- to enable cursorline!


-- –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–Ω–∞–∫–∏ (icons) –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫
local signs = {
  Error = "‚úñ",  -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: "‚õî", "‚ùå", "üö´"
  Warn  = "‚ö†",  -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: "‚ùó", "üî∂", "üü†"
  Hint  = "üí°",  -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: "üîç", "‚ú®", "üõà"
  Info  = "‚Ñπ",  -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: "üìò", "üõà", "üîµ"
}
for type, icon in pairs(signs) do
  local hl = "DiagnosticSign" .. type
  vim.fn.sign_define(hl, { text = icon, texthl = hl, numhl = hl })
end

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤ .vue
vim.cmd([[ autocmd FileType vue setlocal commentstring=<!--\ %s\ --> ]])

-- –ù–æ–º–µ–Ω–∞ —Å—Ç—Ä–æ–∫
vim.wo.number = true
vim.wo.relativenumber = true

-- –ú—ã—à—å
vim.opt.mouse = "a"
vim.opt.mousefocus = true

-- –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
vim.opt.clipboard = "unnamedplus"

-- –ü–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫ –≤ –¥–ª–∏–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
vim.opt.wrap = true 

-- –û—Ç—Å—Ç—É–ø—ã
vim.opt.shiftwidth = 2
vim.opt.tabstop = 2
vim.opt.softtabstop = 2

-- –î—Ä—É–≥–æ–µ
vim.opt.scrolloff = 8
vim.opt.wrap = false
vim.opt.termguicolors = true
vim.opt.fillchars = {
	vert = "‚îÇ",
	fold = "‚†Ä",
	eob = " ", -- suppress ~ at EndOfBuffer
	-- diff = "‚£ø", -- alternatives = ‚£ø ‚ñë ‚îÄ ‚ï±
	msgsep = "‚Äæ",
	foldopen = "‚ñº",
	foldsep = "‚îÇ",
	foldclose = "‚ùØ"
}

vim.o.hlsearch = true  -- –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

local function run_dev(open_browser)
  -- –ó–∞–ø—É—Å–∫ npm run dev –≤ —Å–∫—Ä—ã—Ç–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
  local term_buf = vim.api.nvim_create_buf(false, true)
  vim.api.nvim_open_term(term_buf, {})
  vim.fn.jobstart("npm run dev", { detach = true })

  -- –û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) –∏ —É–¥–∞–ª–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞
  vim.defer_fn(function()
    if open_browser then vim.fn.jobstart("open http://localhost:3000", { detach = true }) end
    vim.api.nvim_buf_delete(term_buf, { force = true })
  end, 3000)
end

vim.api.nvim_create_user_command('Dev', function() run_dev(false) end, {})
vim.api.nvim_create_user_command('Devo', function() run_dev(true) end, {})

